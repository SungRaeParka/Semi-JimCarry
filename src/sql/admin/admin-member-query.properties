selectAll=SELECT * FROM MEMBER WHERE UD_CHECK='U'
selectAllDriver=SELECT * FROM MEMBER M JOIN MEMBER_DRIVER D ON(M.MEMBER_NO = D.DRIVER_NO) WHERE M.UD_CHECK = 'D'
selectAllDc=SELECT * FROM DECLARATION
approveDriver=SELECT * FROM MEMBER M JOIN MEMBER_DRIVER D ON(M.MEMBER_NO = D.DRIVER_NO) WHERE M.UD_CHECK = 'D' AND JOIN_CHECK='\uB300\uAE30'
UdateApproveDriver=UPDATE MEMBER_DRIVER SET JOIN_CHECK=? WHERE DRIVER_NO =?
UdateRefuseDriver=UPDATE MEMBER_DRIVER SET JOIN_CHECK=?, REFUSE_REASON=? WHERE DRIVER_NO =?
blackList=SELECT * FROM BLACK_LIST WHERE GRADE_AVG BETWEEN 0.1 AND 3.5
updateBlackListDriver=UPDATE BLACK_LIST SET GRADE_AVG=?, ACTIVATION_REASON=? WHERE DRIVER_NO =?
accountingPeriodDay=SELECT TO_CHAR(P.PAY_DATE, 'YYYY/MM/DD') "PD", COUNT(*) "COUNT", SUM(P.PAY_AMOUNT-NVL(R.REFUND_FEES, 0)) "SUM", SUM(NVL(C.FEES_INCOME,0)) "INCOME", NVL(SUM(R.REFUND_FEES),0) "REFUND_FEES" FROM PAYMENT_INFO P LEFT JOIN CALCULATE_INFO C ON(P.PAY_NO = C.PAY_NO) LEFT OUTER JOIN (SELECT * FROM REFUND_INFO WHERE REFUND_CONDITION = '\uC644\uB8CC') R ON(P.PAY_NO = R.PAY_NO) GROUP BY TO_CHAR(P.PAY_DATE, 'YYYY/MM/DD') ORDER BY TO_CHAR(P.PAY_DATE, 'YYYY/MM/DD') DESC
accountingPeriodMonth=SELECT TO_CHAR(P.PAY_DATE, 'YYYY/MM') "PD", COUNT(*) "COUNT", SUM(P.PAY_AMOUNT-NVL(R.REFUND_FEES, 0)) "SUM", SUM(NVL(C.FEES_INCOME,0)) "INCOME", NVL(SUM(R.REFUND_FEES),0) "REFUND_FEES" FROM PAYMENT_INFO P LEFT JOIN CALCULATE_INFO C ON(P.PAY_NO = C.PAY_NO) LEFT OUTER JOIN (SELECT * FROM REFUND_INFO WHERE REFUND_CONDITION ='\uC644\uB8CC') R ON(P.PAY_NO = R.PAY_NO) GROUP BY TO_CHAR(P.PAY_DATE, 'YYYY/MM') ORDER BY TO_CHAR(P.PAY_DATE, 'YYYY/MM') DESC
accountingPeriodYear=SELECT TO_CHAR(P.PAY_DATE, 'YYYY') "PD", COUNT(*) "COUNT", SUM(P.PAY_AMOUNT-NVL(R.REFUND_FEES, 0)) "SUM", SUM(NVL(C.FEES_INCOME,0)) "INCOME", NVL(SUM(R.REFUND_FEES),0) "REFUND_FEES" FROM PAYMENT_INFO P LEFT JOIN CALCULATE_INFO C ON(P.PAY_NO = C.PAY_NO) LEFT OUTER JOIN (SELECT * FROM REFUND_INFO WHERE REFUND_CONDITION ='\uC644\uB8CC') R ON(P.PAY_NO = R.PAY_NO) GROUP BY TO_CHAR(P.PAY_DATE, 'YYYY') ORDER BY TO_CHAR(P.PAY_DATE, 'YYYY') DESC
accountingRefundAll=SELECT MEMBER_NAME, PAY_NO, REFUND_REQ_DATE, RESERVATION_DATE, PAY_AMOUNT, REFUND_FEES, REFUND_REASON, REFUND_CONDITION, COMPANION_REASON, USER_NO FROM REFUND_INFO R NATURAL JOIN PAYMENT_INFO P JOIN MEMBER M ON(P.USER_NO = M.MEMBER_NO) ORDER BY REFUND_REQ_DATE DESC
accountingRefunding=SELECT MEMBER_NAME, PAY_NO, REFUND_REQ_DATE, RESERVATION_DATE, PAY_AMOUNT, REFUND_FEES, REFUND_REASON, REFUND_CONDITION, COMPANION_REASON, USER_NO FROM REFUND_INFO R NATURAL JOIN PAYMENT_INFO P JOIN MEMBER M ON(P.USER_NO = M.MEMBER_NO) WHERE REFUND_CONDITION = '\uB300\uAE30' ORDER BY REFUND_REQ_DATE DESC
accountingYesRefund=SELECT MEMBER_NAME, PAY_NO, REFUND_REQ_DATE, RESERVATION_DATE, PAY_AMOUNT, REFUND_FEES, REFUND_REASON, REFUND_CONDITION, COMPANION_REASON, USER_NO FROM REFUND_INFO R NATURAL JOIN PAYMENT_INFO P JOIN MEMBER M ON(P.USER_NO = M.MEMBER_NO) WHERE REFUND_CONDITION = '\uC644\uB8CC' ORDER BY REFUND_REQ_DATE DESC
accountingNoRefund=SELECT MEMBER_NAME, PAY_NO, REFUND_REQ_DATE, RESERVATION_DATE, PAY_AMOUNT, REFUND_FEES, REFUND_REASON, REFUND_CONDITION, COMPANION_REASON, USER_NO FROM REFUND_INFO R NATURAL JOIN PAYMENT_INFO P JOIN MEMBER M ON(P.USER_NO = M.MEMBER_NO) WHERE REFUND_CONDITION = '\uBC18\uB824' ORDER BY REFUND_REQ_DATE DESC
accountingUser=SELECT M.MEMBER_NAME, M.MEMBER_NO, M.MEMBER_ID, P.PAY_NO, R.RESERVATION_DATE, C.PAY_AMOUNT, P.PAY_DATE, P.REFUND_REQ, C.DRIVER_PAY, C.CALCULATE_CHECK FROM MEMBER M, REQUEST_ORDER R, PAYMENT_INFO P, CALCULATE_INFO C WHERE R.REQ_NO = P.REQ_NO AND M.MEMBER_NO = R.USER_NO AND R.REQ_NO = P.REQ_NO AND P.PAY_NO = C.PAY_NO ORDER BY P.PAY_NO DESC
accountingDriver=SELECT M.MEMBER_NAME, M.MEMBER_NO, M.MEMBER_ID, P.PAY_NO, R.RESERVATION_DATE, C.PAY_AMOUNT, P.PAY_DATE, P.REFUND_REQ, C.DRIVER_PAY, C.CALCULATE_CHECK FROM MEMBER M, REQUEST_ORDER R, PAYMENT_INFO P, CALCULATE_INFO C WHERE R.REQ_NO = P.REQ_NO AND M.MEMBER_NO = P.DRIVER_NO AND R.REQ_NO = P.REQ_NO AND P.PAY_NO = C.PAY_NO ORDER BY P.PAY_NO DESC
statisticsMember=SELECT TO_CHAR(M.ENROLL_DATE, 'YYYY/MM') "ED", SUM(COUNT(*)) OVER(ORDER BY TO_CHAR(M.ENROLL_DATE, 'YYYY/MM')) "TOTAL_COUNT", SUM(COUNT(CASE WHEN M.UD_CHECK ='U' THEN 1 END)) OVER(ORDER BY TO_CHAR(M.ENROLL_DATE, 'YYYY/MM')) "U_COUNT", SUM(COUNT(CASE WHEN M.UD_CHECK ='D' THEN 1 END)) OVER(ORDER BY TO_CHAR(M.ENROLL_DATE, 'YYYY/MM')) "D_COUNT" FROM MEMBER M WHERE STATUS_CHECK = 'N' GROUP BY TO_CHAR(ENROLL_DATE, 'YYYY/MM') ORDER BY TO_CHAR(ENROLL_DATE, 'YYYY/MM')
statisticsSales=SELECT TO_CHAR(P.PAY_DATE, 'YYYY/MM') "PD", SUM(P.PAY_AMOUNT-NVL(R.REFUND_FEES, 0)) "SALES", SUM(NVL(C.FEES_INCOME,0)) "PROFIT" FROM PAYMENT_INFO P LEFT JOIN CALCULATE_INFO C ON(P.PAY_NO = C.PAY_NO) LEFT OUTER JOIN (SELECT * FROM REFUND_INFO WHERE REFUND_CONDITION ='\uC644\uB8CC') R ON(P.PAY_NO = R.PAY_NO) GROUP BY TO_CHAR(P.PAY_DATE, 'YYYY/MM') ORDER BY TO_CHAR(P.PAY_DATE, 'YYYY/MM')
accountingMemberUpdate=UPDATE CALCULATE_INFO SET CALCULATE_CHECK=? WHERE PAY_NO =?
updateYesRefund=UPDATE REFUND_INFO SET REFUND_CONDITION=? WHERE PAY_NO =?
updateNoRefund=UPDATE REFUND_INFO SET REFUND_CONDITION=?, COMPANION_REASON=? WHERE PAY_NO =?